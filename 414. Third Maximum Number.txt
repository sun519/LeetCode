题目: 在数组中找出倒数第三个大的数，若数组长度小于三，找出其中最大的一个数

// 方法一 ：代码简洁,但是算法效率比方法二低10%左右,原因在于数组长度只有1,2的时候就不用再走for循环判断了。但是还是推荐这么写,实际应用的话若数组长度这么短就没意义了
var thirdMax = function(nums) {
    var len = nums.length;
        var largest = nums[0];
        var second,
            third;
        for(var i = 1; i< nums.length;i++) {
            if(nums[i] === largest || nums[i] === second || nums[i] === third) continue;
            if(nums[i] > largest){
                var temp1 = largest;
                var temp2 = second;
                largest = nums[i];
                second = temp1;
                third = temp2;
            }else if(nums[i] > second || !second){ // 这里!second等价于second === true,不是undefined也不是null，不要记错了
                third = second;
                second = nums[i];
           
            }else if(nums[i] > third || !third){
                third = nums[i];
            }
        }
        return third === undefined ? largest : third;
        //return !third ? largest : third;  // 不要这么写。注意 这里写!third是third===true的意思，这么写的话third永远为true,因为前面third已经定义过,未赋值只能是undefined。而!third === true 注意null和undefined的区别        
};
console.log(thirdMax([1,2]));

// 方法二
var thirdMax = function(nums) {
    var len = nums.length;
    if(len === 1) {
        return nums;
    }else if(len === 2) {
        return nums[0] > nums[1] ? nums[0] : nums[1];
    }else {
        var largest = nums[0];
        var second,
            third;
        for(var i = 1; i< nums.length;i++) {
            if(nums[i] === largest || nums[i] === second || nums[i] === third) continue;
            if(nums[i] > largest || !largest){
                var temp1 = largest;
                var temp2 = second;
                largest = nums[i];
                second = temp1;
                third = temp2;
            }else if(nums[i] > second || !second){
                third = second;
                second = nums[i];
           
            }else if(nums[i] > third || !third){
                third = nums[i];
            }
        }
        return third === undefined ? largest : third;
        //return !third ? largest : third;  
};
console.log(thirdMax([3,4,3,0]));